CREATE OR REPLACE PACKAGE OCE.PKG_SUBDOMAIN IS                      

TYPE T_RCUR IS REF CURSOR RETURN TBD_OCE_SUBDOMAIN%ROWTYPE;                      

TYPE T_TAB  IS TABLE OF TBD_OCE_SUBDOMAIN%ROWTYPE INDEX BY BINARY_INTEGER;    

V_DATA_OLD T_TAB;
PROCEDURE PR_FIND(
P_DATA IN OUT T_RCUR,
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
);
PROCEDURE PR_FIND_BY(
P_DATA IN OUT T_RCUR,
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE

);
PROCEDURE PR_INSERT(
P_IDSUBDOMAIN out TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
, P_NMSUBDOMAIN in TBD_OCE_SUBDOMAIN.NM_SUBDOMAIN%TYPE
, P_DESUBDOMAIN in TBD_OCE_SUBDOMAIN.DE_SUBDOMAIN%TYPE

);
PROCEDURE PR_UPDATE(
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
, P_NMSUBDOMAIN IN TBD_OCE_SUBDOMAIN.NM_SUBDOMAIN%TYPE
, P_DESUBDOMAIN IN TBD_OCE_SUBDOMAIN.DE_SUBDOMAIN%TYPE

,P_IGNORENULL IN CHAR
);
PROCEDURE PR_DELETE(
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
);
PROCEDURE PR_UPDATE_BY(
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
, P_NMSUBDOMAIN IN TBD_OCE_SUBDOMAIN.NM_SUBDOMAIN%TYPE
, P_DESUBDOMAIN IN TBD_OCE_SUBDOMAIN.DE_SUBDOMAIN%TYPE

,P_IGNORENULL IN CHAR
);
PROCEDURE PR_DELETE_BY(
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE

);
END;
/


CREATE OR REPLACE PACKAGE BODY OCE.PKG_SUBDOMAIN IS                      

PROCEDURE PR_FIND(P_DATA IN OUT T_RCUR ,
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE) IS
BEGIN
 OPEN P_DATA FOR
              SELECT *
              FROM TBD_OCE_SUBDOMAIN
              WHERE
NVL(ID_SUBDOMAIN,0) = NVL(P_IDSUBDOMAIN,NVL(ID_SUBDOMAIN,0));
END;

PROCEDURE PR_FIND_BY(P_DATA IN OUT T_RCUR ,
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
) IS
BEGIN
 OPEN P_DATA FOR
              SELECT *
              FROM TBD_OCE_SUBDOMAIN
              WHERE
NVL(ID_SUBDOMAIN,0) = NVL(P_IDSUBDOMAIN,NVL(ID_SUBDOMAIN,0))
;
END;


PROCEDURE PR_INSERT(
         P_IDSUBDOMAIN out TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
, P_NMSUBDOMAIN in TBD_OCE_SUBDOMAIN.NM_SUBDOMAIN%TYPE
, P_DESUBDOMAIN in TBD_OCE_SUBDOMAIN.DE_SUBDOMAIN%TYPE

) IS
BEGIN
 SELECT  SQ_SUBDOMAIN.NEXTVAL INTO P_IDSUBDOMAIN FROM DUAL;
 INSERT INTO TBD_OCE_SUBDOMAIN
    (
      ID_SUBDOMAIN
, NM_SUBDOMAIN
, DE_SUBDOMAIN
     
    )
  VALUES (      
      P_IDSUBDOMAIN
, P_NMSUBDOMAIN
, P_DESUBDOMAIN
                     
    );
EXCEPTION
   WHEN OTHERS THEN
     RAISE_APPLICATION_ERROR(-20002, 'ERROR AO INSERIR NA TABELA TBD_OCE_SUBDOMAIN. INFORME O ERRO A TECNOLOGIA ! '||SQLERRM);
END;

PROCEDURE PR_UPDATE(
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
, P_NMSUBDOMAIN IN TBD_OCE_SUBDOMAIN.NM_SUBDOMAIN%TYPE
, P_DESUBDOMAIN IN TBD_OCE_SUBDOMAIN.DE_SUBDOMAIN%TYPE

         ,P_IGNORENULL              IN CHAR) IS
BEGIN
   IF P_IGNORENULL IS NULL OR P_IGNORENULL = 'N' THEN
      BEGIN
      UPDATE TBD_OCE_SUBDOMAIN
         SET
              NM_SUBDOMAIN = P_NMSUBDOMAIN
, DE_SUBDOMAIN = P_DESUBDOMAIN
                   
       WHERE ID_SUBDOMAIN = P_IDSUBDOMAIN;
     EXCEPTION
         WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20002, 'ERROR AO ALTERAR A TABELA TBD_OCE_SUBDOMAIN. INFORME O ERRO A TECNOLOGIA ! '||SQLERRM);
       END;
     ELSE
      BEGIN
      UPDATE TBD_OCE_SUBDOMAIN
         SET
 NM_SUBDOMAIN = NVL(P_NMSUBDOMAIN, NM_SUBDOMAIN)
, DE_SUBDOMAIN = NVL(P_DESUBDOMAIN, DE_SUBDOMAIN)

       WHERE ID_SUBDOMAIN = P_IDSUBDOMAIN;
     EXCEPTION
         WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20002, 'ERROR AO ALTERAR A TABELA TBD_OCE_SUBDOMAIN. INFORME O ERRO A TECNOLOGIA ! '||SQLERRM);
       END;
     END IF;
END;

PROCEDURE PR_DELETE(
        P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
) IS
BEGIN
 DELETE TBD_OCE_SUBDOMAIN
  WHERE ID_SUBDOMAIN = P_IDSUBDOMAIN;
EXCEPTION
   WHEN OTHERS THEN
     RAISE_APPLICATION_ERROR(-20002, 'ERROR AO EXCLUIR NA TABELA TBD_OCE_SUBDOMAIN. INFORME O ERRO A TECNOLOGIA ! '||SQLERRM);
END;

PROCEDURE PR_UPDATE_BY(
P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE
, P_NMSUBDOMAIN IN TBD_OCE_SUBDOMAIN.NM_SUBDOMAIN%TYPE
, P_DESUBDOMAIN IN TBD_OCE_SUBDOMAIN.DE_SUBDOMAIN%TYPE

         ,P_IGNORENULL              IN CHAR) IS
BEGIN
   IF P_IGNORENULL IS NULL OR P_IGNORENULL = 'N' THEN
      BEGIN
      UPDATE TBD_OCE_SUBDOMAIN
         SET
              ID_SUBDOMAIN = NVL(P_IDSUBDOMAIN, ID_SUBDOMAIN)
, NM_SUBDOMAIN = P_NMSUBDOMAIN
, DE_SUBDOMAIN = P_DESUBDOMAIN
                   
       WHERE NVL(ID_SUBDOMAIN,0) = NVL(P_IDSUBDOMAIN,NVL(ID_SUBDOMAIN,0))
;
     EXCEPTION
         WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20002, 'ERROR AO ALTERAR A TABELA TBD_OCE_SUBDOMAIN. INFORME O ERRO A TECNOLOGIA ! '||SQLERRM);
       END;
     ELSE
      BEGIN
      UPDATE TBD_OCE_SUBDOMAIN
         SET
 ID_SUBDOMAIN = NVL(P_IDSUBDOMAIN, ID_SUBDOMAIN)
, NM_SUBDOMAIN = NVL(P_NMSUBDOMAIN, NM_SUBDOMAIN)
, DE_SUBDOMAIN = NVL(P_DESUBDOMAIN, DE_SUBDOMAIN)

       WHERE NVL(ID_SUBDOMAIN,0) = NVL(P_IDSUBDOMAIN,NVL(ID_SUBDOMAIN,0))
;
     EXCEPTION
         WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20002, 'ERROR AO ALTERAR A TABELA TBD_OCE_SUBDOMAIN. INFORME O ERRO A TECNOLOGIA ! '||SQLERRM);
       END;
     END IF;
END;

PROCEDURE PR_DELETE_BY(
        P_IDSUBDOMAIN IN TBD_OCE_SUBDOMAIN.ID_SUBDOMAIN%TYPE

) IS
BEGIN
 DELETE TBD_OCE_SUBDOMAIN
  WHERE NVL(ID_SUBDOMAIN,0) = NVL(P_IDSUBDOMAIN,NVL(ID_SUBDOMAIN,0))
;
EXCEPTION
   WHEN OTHERS THEN
     RAISE_APPLICATION_ERROR(-20002, 'ERROR AO EXCLUIR NA TABELA TBD_OCE_SUBDOMAIN. INFORME O ERRO A TECNOLOGIA ! '||SQLERRM);
END;

END;
/
